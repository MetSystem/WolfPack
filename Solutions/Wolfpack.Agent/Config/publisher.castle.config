<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <components>
    <!-- START: COMPONENTS FOR GROWL PUBLISHERS -->
    <component id="GrowlConfiguration"
				   lifestyle="singleton"
				   type="Wolfpack.Core.Growl.GrowlConfiguration, Wolfpack.Core">
      <parameters>
        <Enabled>true</Enabled>
        <FriendlyId>Growl</FriendlyId>
        <AppId>Wolfpack</AppId>
        <NotificationId>HealthCheck</NotificationId>
        <NotificationTitle>Platform HealthCheck</NotificationTitle>        
        <IconFile>growl\agent.png</IconFile>
        <!-- optional params  
				<Password></Password>
				<Hostname></Hostname>
				<Port></Port>
				-->
      </parameters>
    </component>
    <!-- END: COMPONENTS FOR GROWL PUBLISHERS -->

    <!-- START: COMPONENTS FOR SQLite PUBLISHERS -->
    <component id="SQLiteConfiguration"
				   lifestyle="singleton"
				   type="Wolfpack.Core.Database.SQLite.SQLiteConfiguration, Wolfpack.Core">
      <parameters>        
        <Enabled>false</Enabled>
        <FriendlyId>SQLite</FriendlyId>
        <!-- This can be either the name of a connection string 
             (in config\data.connection.config) or an actual connection string -->
        <ConnectionString>Wolfpack-SQLite</ConnectionString>
      </parameters>
    </component>
    <!-- END: COMPONENTS FOR SQLite PUBLISHERS -->
    
    <!-- START: COMPONENTS FOR SQL SERVER PUBLISHERS -->
    <component id="SqlServerConfiguration"
				   lifestyle="singleton"
				   type="Wolfpack.Core.Database.SqlServer.SqlServerConfiguration, Wolfpack.Core">
      <parameters>        
        <Enabled>false</Enabled>
        <FriendlyId>SqlServer</FriendlyId>
        <!-- This can be either the name of a connection string 
             (in config\data.connection.config) or an actual connection string -->
        <ConnectionString>Wolfpack</ConnectionString>
        <!-- Set this to true to store just the last result or false (or remove it)
             to store a history of results (if you wanted to graph something) -->
        <Overwrite>false</Overwrite>
      </parameters>
    </component>
    <!-- END: COMPONENTS FOR SQL SERVER PUBLISHERS -->
    
    <!-- START: COMPONENTS FOR WCF PUBLISHERS -->
    <component id="WcfPublisherConfiguration"
				   lifestyle="singleton"
				   type="Wolfpack.Core.Wcf.WcfPublisherConfiguration, Wolfpack.Core">
      <parameters>        
        <Enabled>false</Enabled>
        <FriendlyId>Wcf</FriendlyId>
        <Uri>http://localhost:802/Wolfpack</Uri>
      </parameters>
    </component>
    <!-- END: COMPONENTS FOR WCF PUBLISHERS -->
    
    <!-- START: COMPONENTS FOR BUS PUBLISHERS -->
    <component id="BusPublisherConfig"
				   lifestyle="singleton"
				   type="Wolfpack.Core.Bus.BusPublisherConfig, Wolfpack.Core">
      <parameters>
        <Enabled>false</Enabled>
        <FriendlyId>NServiceBus</FriendlyId>
        <ErrorQueue>WolfpackError</ErrorQueue>
        <InputQueue>WolfpackInput</InputQueue>
        <OutputQueue>WolfpackOutput</OutputQueue>
        <!-- Only required if using the Http Gateway
             This value is injected into the NSB message header in 
             order for the gateway service to route it to the correct server.
             Leave out (or blank) to ensure this is not set -->
        <HttpGatewayUri></HttpGatewayUri>
      </parameters>
    </component>
    <!--END: COMPONENTS FOR BUS PUBLISHERS -->

    <!-- START: COMPONENTS FOR FILESYS BRIDGE PUBLISHERS-->
    
    <!-- This component publishes to the file system -->
    <component id="FileSystemBridgePublisherConfig"
				   lifestyle="singleton"
				   type="Wolfpack.Core.Bridge.FileSystem.FileSystemBridgePublisherConfig, Wolfpack.Core">
      <parameters>
        <Enabled>false</Enabled>
        <FriendlyId>FileSysBridge</FriendlyId>
        <Folder>c:\temp\filesysbridge</Folder>
      </parameters>
    </component>
    
    <!-- This component sweeps the file system and forwards 
         messages backing into the message bus -->
    <component id="FileSystemBridgeCheckConfig"
				   lifestyle="singleton"
				   type="Wolfpack.Core.Bridge.FileSystem.FileSystemBridgeCheckConfig, Wolfpack.Core">
      <parameters>
        <Enabled>true</Enabled>
        <FriendlyId>FileSysBridgeCheck</FriendlyId>
        <Folder>c:\temp\filesysbridge</Folder>
      </parameters>
    </component>

    <!-- This sets the schedule for the FileSystemBridgeCheckConfig 
         component -->
    <component id="FileSystemBridgeCheckBindingConfig"
				   lifestyle="singleton"
				   type="Wolfpack.Core.Interfaces.Entities.BindingConfiguration, Wolfpack.Core.Interfaces">
      <parameters>
        <HealthCheckConfigurationName>FileSystemBridgeCheckConfig</HealthCheckConfigurationName>
        <ScheduleConfigurationName>EveryMinute</ScheduleConfigurationName>
      </parameters>
    </component>

    <!--END: COMPONENTS FOR FILESYS BRIDGE PUBLISHERS -->
  </components>
</configuration>